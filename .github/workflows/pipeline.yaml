name: Build, Lint, Test

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize

jobs:
  lint:
    name: Ô∏è‚öíÔ∏è & üëï

    strategy:
      matrix:
        python-version: [3.6.7, 3.7, 3.8]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          create_virtualenvs: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ github.ref }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            poetry-${{ github.ref }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install

      - name: Run pre-commit
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin master:master
          poetry run pre-commit run --from-ref master --to-ref HEAD

  test:
    name: üß™
    needs: lint

    strategy:
      matrix:
        python-version: [3.6.7, 3.7, 3.8]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          create_virtualenvs: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ github.ref }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            poetry-${{ github.ref }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install

      - name: Unit Test
        run: poetry run python -m pytest --cov=src --cov-branch tests/

      - name: Submit Code Coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: py-${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: poetry run coveralls

  test-finish:
    name: üö™
    needs: test

    runs-on: ubuntu-latest
    container: python:3-slim

    steps:
      - name: Finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip3 install coveralls
          coveralls --finish
